#include "rules-servlets-only.dl"

ServletEntryMethodName("service").

.decl WebappMock(?v: mainAnalysis.Value)

#define MOCK_WEBAPP_CTX(class)\
  cat(cat("<Mock webapp context ", class), ">")

mainAnalysis.configuration.RecordContextRequest(?ctx, MOCK_WEBAPP_CTX(?class), ?var) :-
  mainAnalysis.ReachableContext(?ctx, "<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext)>"),
  ReturnVar(?var, "<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext)>"),
  Var_Type(?var, ?type),
  ConcreteImplementations(?type, ?class).

WebappMock(MOCK_WEBAPP_CTX(?class)),
mainAnalysis_MockValueConsMacro(MOCK_WEBAPP_CTX(?class), ?class),
mainAnalysis.VarPointsTo(?hctx, MOCK_WEBAPP_CTX(?class), ?ctx, ?var),
MockObject(MOCK_WEBAPP_CTX(?class), ?class) :-
  mainAnalysis.ReachableContext(?ctx, "<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext)>"),
  ReturnVar(?var, "<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext)>"),
  Var_Type(?var, ?type),
  ConcreteImplementations(?type, ?class),
  mainAnalysis.configuration.RecordContextRequest(?ctx, MOCK_WEBAPP_CTX(?class), ?var),
  mainAnalysis.configuration.RecordContextResponse(?ctx, MOCK_WEBAPP_CTX(?class), ?var, ?hctx).

WebappMock(MOCK_WEBAPP_CTX(?class)),
mainAnalysis_MockValueConsMacro(MOCK_WEBAPP_CTX(?class), ?class),
MockObject(MOCK_WEBAPP_CTX(?class), ?class),
mainAnalysis.VarPointsTo(?hctx, MOCK_WEBAPP_CTX(?class), ?ctx, ?to) :-
  mainAnalysis.VarPointsTo(?hctx, ?value, ?ctx, ?from),
  WebappMock(?value),
  mainAnalysis.OptAssignCast(?type, ?to, ?from),
  (contains("org.springframework.web.context.", ?type) ;
   contains("org.springframework.context.", ?type) ;
   contains("java.lang.Object", ?type) ;
   contains("org.alfresco.service.", ?type)),
  ConcreteImplementations(?type, ?class).
.plan 2: (3,1,2,4)


WebappMock(MOCK_WEBAPP_CTX(?class)),
mainAnalysis_MockValueConsMacro(MOCK_WEBAPP_CTX(?class), ?class),
MockObject(MOCK_WEBAPP_CTX(?class), ?class),
mainAnalysis.VarPointsTo(?hctx, MOCK_WEBAPP_CTX(?class), ?ctx, ?ret) :-
  ThisVar(?tomethod, ?this),
  mainAnalysis.VarPointsTo(?hctx, ?value, ?ctx, ?this),
  WebappMock(?value),
  ReturnVar(?ret, ?tomethod),
  Var_Type(?ret, ?type),
  (contains("org.springframework.web.context.", ?type) ;
   contains("org.springframework.context.", ?type) ;
   contains("java.lang.Object", ?type) ;
   contains("org.alfresco.service.", ?type)),
  ConcreteImplementations(?type, ?class).
