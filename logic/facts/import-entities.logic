// ClassType

lang:physical:storageModel[`_ClassType] = "DelimitedFile".
lang:physical:filePath[`_ClassType] = "facts/ClassType.facts".
lang:physical:delimiter[`_ClassType] = "\t".
lang:physical:hasColumnNames[`_ClassType] = false.

_ClassType(?param1) ->
  string(?param1).

+Type:Id(?t:?param1),
+ClassType(?t) <-
  _ClassType(?param1).


// ArrayType

lang:physical:storageModel[`_ArrayType] = "DelimitedFile".
lang:physical:filePath[`_ArrayType] = "facts/ArrayType.facts".
lang:physical:delimiter[`_ArrayType] = "\t".
lang:physical:hasColumnNames[`_ArrayType] = false.

_ArrayType(?param1) ->
  string(?param1).

+Type:Id(?t:?param1),
+ArrayType(?t) <-
  _ArrayType(?param1).


// InterfaceType

lang:physical:storageModel[`_InterfaceType] = "DelimitedFile".
lang:physical:filePath[`_InterfaceType] = "facts/InterfaceType.facts".
lang:physical:delimiter[`_InterfaceType] = "\t".
lang:physical:hasColumnNames[`_InterfaceType] = false.

_InterfaceType(?param1) ->
  string(?param1).

+Type:Id(?t:?param1),
+InterfaceType(?t) <-
  _InterfaceType(?param1).


// ComponentType

lang:physical:storageModel[`_ComponentType] = "DelimitedFile".
lang:physical:filePath[`_ComponentType] = "facts/ComponentType.facts".
lang:physical:delimiter[`_ComponentType] = "\t".
lang:physical:hasColumnNames[`_ComponentType] = false.

_ComponentType(?param1, ?param2) ->
  string(?param1),
  string(?param2).

+Type:Id(?arrayType:?param1),
+ArrayType(?arrayType),
+Type:Id(?componentType:?param2),
+Type(?componentType),
+ComponentType[?arrayType] = ?componentType <-
  _ComponentType(?param1, ?param2).


// ActualParam

lang:physical:storageModel[`_ActualParam] = "DelimitedFile".
lang:physical:filePath[`_ActualParam] = "facts/ActualParam.facts".
lang:physical:delimiter[`_ActualParam] = "\t".
lang:physical:hasColumnNames[`_ActualParam] = false.

_ActualParam(?param1, ?param2, ?param3) ->
  int[64](?param1),
  string(?param2),
  string(?param3).

+Instruction:Id(?invocation:?param2),
+MethodInvocation(?invocation),
+Var:Id(?var:?param3),
+Var(?var),
+ActualParam[?index, ?invocation] = ?var <-
  _ActualParam(?index, ?param2, ?param3).


// BootstrapParam

lang:physical:storageModel[`_BootstrapParam] = "DelimitedFile".
lang:physical:filePath[`_BootstrapParam] = "facts/BootstrapParam.facts".
lang:physical:delimiter[`_BootstrapParam] = "\t".
lang:physical:hasColumnNames[`_BootstrapParam] = false.

_BootstrapParam(?param1, ?param2, ?param3) ->
  int[64](?param1),
  string(?param2),
  string(?param3).

+Instruction:Id(?invocation:?param2),
+DynamicMethodInvocation:Insn(?invocation),
+Var:Id(?var:?param3),
+Var(?var),
+BootstrapParam[?index, ?invocation] = ?var <-
  _BootstrapParam(?index, ?param2, ?param3).


// DirectSuperinterface

lang:physical:storageModel[`_DirectSuperinterface] = "DelimitedFile".
lang:physical:filePath[`_DirectSuperinterface] = "facts/DirectSuperinterface.facts".
lang:physical:delimiter[`_DirectSuperinterface] = "\t".
lang:physical:hasColumnNames[`_DirectSuperinterface] = false.

_DirectSuperinterface(?param1, ?param2) ->
  string(?param1),
  string(?param2).

+Type:Id(?class:?param1),
+ReferenceType(?class),
+Type:Id(?interface:?param2),
+InterfaceType(?interface),
+DirectSuperinterface(?class, ?interface) <-
  _DirectSuperinterface(?param1, ?param2).


// DirectSuperclass

lang:physical:storageModel[`_DirectSuperclass] = "DelimitedFile".
lang:physical:filePath[`_DirectSuperclass] = "facts/DirectSuperclass.facts".
lang:physical:delimiter[`_DirectSuperclass] = "\t".
lang:physical:hasColumnNames[`_DirectSuperclass] = false.

_DirectSuperclass(?param1, ?param2) ->
  string(?param1),
  string(?param2).

+Type:Id(?class:?param1),
+ClassType(?class),
+Type:Id(?superclass:?param2),
+ClassType(?superclass),
+DirectSuperclass[?class] = ?superclass <-
  _DirectSuperclass(?param1, ?param2).


// Field:Modifier

lang:physical:storageModel[`_Field:Modifier] = "DelimitedFile".
lang:physical:filePath[`_Field:Modifier] = "facts/Field-Modifier.facts".
lang:physical:delimiter[`_Field:Modifier] = "\t".
lang:physical:hasColumnNames[`_Field:Modifier] = false.

_Field:Modifier(?param1, ?param2) ->
  string(?param1),
  string(?param2).

+Modifier:Id(?modifier:?param1),
+Modifier(?modifier),
+Field:Id(?field:?param2),
+Field(?field),
+Field:Modifier(?modifier, ?field) <-
  _Field:Modifier(?param1, ?param2).


lang:physical:storageModel[`_ClassModifier] = "DelimitedFile".
lang:physical:filePath[`_ClassModifier] = "facts/ClassModifier.facts".
lang:physical:delimiter[`_ClassModifier] = "\t".
lang:physical:hasColumnNames[`_ClassModifier] = false.

_ClassModifier(?param1, ?param2) ->
  string(?param1),
  string(?param2).

+ClassModifier(?class, ?modifier) <-
  _ClassModifier(?class, ?modifier).

// FormalParam

lang:physical:storageModel[`_FormalParam] = "DelimitedFile".
lang:physical:filePath[`_FormalParam] = "facts/FormalParam.facts".
lang:physical:delimiter[`_FormalParam] = "\t".
lang:physical:hasColumnNames[`_FormalParam] = false.

_FormalParam(?param1, ?param2, ?param3) ->
  int[64](?param1),
  string(?param2),
  string(?param3).

+Method:Id(?method:?param2),
+Method(?method),
+Var:Id(?var:?param3),
+Var(?var),
+FormalParam[?index, ?method] = ?var <-
  _FormalParam(?index, ?param2, ?param3).


// Method:DeclaresException

lang:physical:storageModel[`_Method:DeclaresException] = "DelimitedFile".
lang:physical:filePath[`_Method:DeclaresException] = "facts/Method-DeclaresException.facts".
lang:physical:delimiter[`_Method:DeclaresException] = "\t".
lang:physical:hasColumnNames[`_Method:DeclaresException] = false.

_Method:DeclaresException(?param1, ?param2) ->
  string(?param1),
  string(?param2).

+Type:Id(?exceptionType:?param1),
+ReferenceType(?exceptionType),
+Method:Id(?method:?param2),
+Method(?method),
+Method:DeclaresException(?exceptionType, ?method) <-
  _Method:DeclaresException(?param1, ?param2).


// Method:Modifier

lang:physical:storageModel[`_Method:Modifier] = "DelimitedFile".
lang:physical:filePath[`_Method:Modifier] = "facts/Method-Modifier.facts".
lang:physical:delimiter[`_Method:Modifier] = "\t".
lang:physical:hasColumnNames[`_Method:Modifier] = false.

_Method:Modifier(?param1, ?param2) ->
  string(?param1),
  string(?param2).

+Modifier:Id(?mod:?param1),
+Modifier(?mod),
+Method:Id(?method:?param2),
+Method(?method),
+Method:Modifier(?mod, ?method) <-
  _Method:Modifier(?param1, ?param2).


// NativeReturnVar

lang:physical:storageModel[`_NativeReturnVar] = "DelimitedFile".
lang:physical:filePath[`_NativeReturnVar] = "facts/NativeReturnVar.facts".
lang:physical:delimiter[`_NativeReturnVar] = "\t".
lang:physical:hasColumnNames[`_NativeReturnVar] = false.

_NativeReturnVar(?param1, ?param2) ->
  string(?param1),
  string(?param2).

+Var:Id(?var:?param1),
+Var(?var),
+Method:Id(?method:?param2),
+Method(?method),
+NativeReturnVar(?var, ?method) <-
  _NativeReturnVar(?param1, ?param2).


// Var:Type

lang:physical:storageModel[`_Var:Type] = "DelimitedFile".
lang:physical:filePath[`_Var:Type] = "facts/Var-Type.facts".
lang:physical:delimiter[`_Var:Type] = "\t".
lang:physical:hasColumnNames[`_Var:Type] = false.

_Var:Type(?param1, ?param2) ->
  string(?param1),
  string(?param2).

+Var:Id(?ref:?param1),
+Var(?ref),
+Type:Id(?type:?param2),
+Type(?type),
+Var:Type[?ref] = ?type <-
  _Var:Type(?param1, ?param2).


// Var:DeclaringMethod

lang:physical:storageModel[`_Var:DeclaringMethod] = "DelimitedFile".
lang:physical:filePath[`_Var:DeclaringMethod] = "facts/Var-DeclaringMethod.facts".
lang:physical:delimiter[`_Var:DeclaringMethod] = "\t".
lang:physical:hasColumnNames[`_Var:DeclaringMethod] = false.

_Var:DeclaringMethod(?param1, ?param2) ->
  string(?param1),
  string(?param2).

+Var:Id(?ref:?param1),
+Var(?ref),
+Method:Id(?method:?param2),
+Method(?method),
+Var:DeclaringMethod(?ref, ?method) <-
  _Var:DeclaringMethod(?param1, ?param2).


// ApplicationClass

lang:physical:storageModel[`_ApplicationClass] = "DelimitedFile".
lang:physical:filePath[`_ApplicationClass] = "facts/ApplicationClass.facts".
lang:physical:delimiter[`_ApplicationClass] = "\t".
lang:physical:hasColumnNames[`_ApplicationClass] = false.

_ApplicationClass(?param1) ->
  string(?param1).

+Type:Id(?ref:?param1),
+ReferenceType(?ref),
+ApplicationClass(?ref) <-
  _ApplicationClass(?param1).


// ThisVar

lang:physical:storageModel[`_ThisVar] = "DelimitedFile".
lang:physical:filePath[`_ThisVar] = "facts/ThisVar.facts".
lang:physical:delimiter[`_ThisVar] = "\t".
lang:physical:hasColumnNames[`_ThisVar] = false.

_ThisVar(?param1, ?param2) ->
  string(?param1),
  string(?param2).

+Method:Id(?method:?param1),
+Method(?method),
+Var:Id(?var:?param2),
+Var(?var),
+ThisVar[?method] = ?var <-
  _ThisVar(?param1, ?param2).


// ExceptionHandler:Previous

lang:physical:storageModel[`_ExceptionHandler:Previous] = "DelimitedFile".
lang:physical:filePath[`_ExceptionHandler:Previous] = "facts/ExceptionHandler-Previous.facts".
lang:physical:delimiter[`_ExceptionHandler:Previous] = "\t".
lang:physical:hasColumnNames[`_ExceptionHandler:Previous] = false.

_ExceptionHandler:Previous(?param1, ?param2) ->
  string(?param1),
  string(?param2).

+ExceptionHandler:Id(?handler:?param1),
+ExceptionHandler(?handler),
+ExceptionHandler:Id(?previous:?param2),
+ExceptionHandler(?previous),
+ExceptionHandler:Previous[?handler] = ?previous <-
  _ExceptionHandler:Previous(?param1, ?param2).


// AssignReturnValue

lang:physical:storageModel[`_AssignReturnValue] = "DelimitedFile".
lang:physical:filePath[`_AssignReturnValue] = "facts/AssignReturnValue.facts".
lang:physical:delimiter[`_AssignReturnValue] = "\t".
lang:physical:hasColumnNames[`_AssignReturnValue] = false.

_AssignReturnValue(?param1, ?param2) ->
  string(?param1),
  string(?param2).

+Instruction:Id(?invocation:?param1),
+MethodInvocation(?invocation),
+Var:Id(?to:?param2),
+Var(?to),
+AssignReturnValue[?invocation] = ?to <-
  _AssignReturnValue(?param1, ?param2).


// Properties

lang:physical:storageModel[`_Properties] = "DelimitedFile".
lang:physical:filePath[`_Properties] = "facts/Properties.facts".
lang:physical:delimiter[`_Properties] = "\t".
lang:physical:hasColumnNames[`_Properties] = false.

_Properties(?param1, ?param2, ?param3) ->
  string(?param1),
  string(?param2),
  string(?param3).

//+Instruction:Id(?path:?param1),
//+StringConstant(?path),
//+Instruction:Id(?key:?param2),
//+StringConstant(?key),
//+Instruction:Id(?value:?param3),
//+StringConstant(?value),
//+Properties[?path, ?key] = ?value <-
//  _Properties(?param1, ?param2, ?param3).
