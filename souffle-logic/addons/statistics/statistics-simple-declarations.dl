#include "statistics-output.dl"

/***************************************************
 * Variables
 ***************************************************/

.decl Stats_Simple_InsensVarPointsTo(?value:Value, ?var:Var)
OUTPUT_STATS(Stats_Simple_InsensVarPointsTo)

.decl Stats_Simple_AssignedVariable(?var:Var)
OUTPUT_STATS(Stats_Simple_AssignedVariable)

.decl Stats_Simple_Application_InsensVarPointsTo(?value:Value, ?var:Var)
OUTPUT_STATS(Stats_Simple_Application_InsensVarPointsTo)

.decl Stats_Simple_Application_VarPointsTo(?hctx:HContext, ?value:Value, ?ctx:Context, ?var:Var)
OUTPUT_STATS(Stats_Simple_Application_VarPointsTo)

.decl Stats_Simple_InsensReachableVar(?var:Var)
OUTPUT_STATS(Stats_Simple_InsensReachableVar)

.decl Stats_Simple_ReachableVar(?ctx:Context, ?var:Var)
OUTPUT_STATS(Stats_Simple_ReachableVar)

/***************************************************
 * Arrays
 ***************************************************/

.decl Stats_Simple_InsensArrayIndexPointsTo(?value:Value, ?basevalue:Value)
OUTPUT_STATS(Stats_Simple_InsensArrayIndexPointsTo)

.decl Stats_Simple_Application_InsensArrayIndexPointsTo(?value:Value, ?basevalue:Value)
OUTPUT_STATS(Stats_Simple_Application_InsensArrayIndexPointsTo)

.decl Stats_Simple_Application_ArrayIndexPointsTo(?hctx:HContext, ?value:Value, ?baseHCtx:HContext, ?basevalue:Value)
OUTPUT_STATS(Stats_Simple_Application_ArrayIndexPointsTo)

/***************************************************
 * Fields
 ***************************************************/

.decl Stats_Simple_InsensInstanceFieldPointsTo(?value:Value, ?sig:Field, ?basevalue:Value)
OUTPUT_STATS(Stats_Simple_InsensInstanceFieldPointsTo)

.decl Stats_Simple_InsensStaticFieldPointsTo(?value:Value, ?sig:Field)
OUTPUT_STATS(Stats_Simple_InsensStaticFieldPointsTo)

.decl Stats_Simple_Application_InsensInstanceFieldPointsTo(?value:Value, ?sig:Field, ?basevalue:Value)
OUTPUT_STATS(Stats_Simple_Application_InsensInstanceFieldPointsTo)

.decl Stats_Simple_Application_InstanceFieldPointsTo(?hctx:HContext, ?value:Value, ?sig:Field, ?baseHCtx:HContext, ?basevalue:Value)
OUTPUT_STATS(Stats_Simple_Application_InstanceFieldPointsTo)

/***************************************************
 * Call graph edges
 ***************************************************/

.decl Stats_Simple_InsensCallGraphEdge(?from:MethodInvocation, ?to:Method)
OUTPUT_STATS(Stats_Simple_InsensCallGraphEdge)

.decl Stats_Simple_VirtualCallGraphEdge(?from:MethodInvocation, ?to:Method)
OUTPUT_STATS(Stats_Simple_VirtualCallGraphEdge)

/***************************************************
 * Application methods
 ***************************************************/

.decl Stats_Simple_InsensReachableApplicationMethod(?method:Method)
OUTPUT_STATS(Stats_Simple_InsensReachableApplicationMethod)

.decl Stats_Simple_ReachableApplicationMethod(?ctx:Context, ?method:Method)
OUTPUT_STATS(Stats_Simple_ReachableApplicationMethod)

.decl Stats_Simple_ApplicationConcreteMethod(?method:Method)
OUTPUT_STATS(Stats_Simple_ApplicationConcreteMethod)

.decl Stats_Simple_NonReachableApplicationConcreteMethod(?method:Method)
OUTPUT_STATS(Stats_Simple_NonReachableApplicationConcreteMethod)

/***************************************************
 * Virtual method invocations
 ***************************************************/

.decl Stats_Simple_ReachableVirtualMethodInvocation(?invocation:MethodInvocation)
OUTPUT_STATS(Stats_Simple_ReachableVirtualMethodInvocation)

.decl Stats_Simple_Application_ReachableVirtualMethodInvocation(?invocation:MethodInvocation)
OUTPUT_STATS(Stats_Simple_Application_ReachableVirtualMethodInvocation)

// Intermediate predicate
.decl Stats_Simple_VirtualTargets(?invocation:MethodInvocation, ?c:number)

.decl Stats_Simple_PolymorphicCallSite(?invocation:MethodInvocation)
OUTPUT_STATS(Stats_Simple_PolymorphicCallSite)

.decl Stats_Simple_NullVirtualMethodInvocation(?invocation:MethodInvocation)
OUTPUT_STATS(Stats_Simple_NullVirtualMethodInvocation)

.decl Stats_Simple_EmptyVirtualMethodInvocation(?invocation:MethodInvocation)
OUTPUT_STATS(Stats_Simple_EmptyVirtualMethodInvocation)

.decl Stats_Simple_Application_VirtualMethodInvocation(?invocation:MethodInvocation)
OUTPUT_STATS(Stats_Simple_Application_VirtualMethodInvocation)

.decl Stats_Simple_Application_PolymorphicCallSite(?invocation:MethodInvocation)
OUTPUT_STATS(Stats_Simple_Application_PolymorphicCallSite)

.decl Stats_Simple_Application_NullVirtualMethodInvocation(?invocation:MethodInvocation)
OUTPUT_STATS(Stats_Simple_Application_NullVirtualMethodInvocation)

.decl Stats_Simple_Application_EmptyVirtualMethodInvocation(?invocation:MethodInvocation)
OUTPUT_STATS(Stats_Simple_Application_EmptyVirtualMethodInvocation)

/***************************************************
 * Casts
 ***************************************************/

.decl Stats_Simple_ReachableCast(?inmethod:Method, ?type:Type, ?to:Var, ?from:Var)
OUTPUT_STATS(Stats_Simple_ReachableCast)

.decl Stats_Simple_PotentiallyFailingCast(?type:Type, ?from:Var, ?to:Var)
OUTPUT_STATS(Stats_Simple_PotentiallyFailingCast)

.decl Stats_Simple_Application_Cast(?type:Type, ?from:Var, ?to:Var, ?inmethod:Method)
OUTPUT_STATS(Stats_Simple_Application_Cast)

.decl Stats_Simple_Application_ReachableCast(?inmethod:Method, ?type:Type, ?to:Var, ?from:Var)
OUTPUT_STATS(Stats_Simple_Application_ReachableCast)

.decl Stats_Simple_Application_ReachableMethod(?method:Method)
OUTPUT_STATS(Stats_Simple_Application_ReachableMethod)

.decl Stats_Simple_Application_PotentiallyFailingCast(?type:Type, ?from:Var, ?to:Var)
OUTPUT_STATS(Stats_Simple_Application_PotentiallyFailingCast)

/***************************************************
 * Reflection
 ***************************************************/

#ifdef REFLECTION
.decl Stats_Simple_Reflection_InsensArrayIndexPointsTo(?value:Value, ?basevalue:Value)
OUTPUT_STATS(Stats_Simple_Reflection_InsensArrayIndexPointsTo)

.decl Stats_Simple_Reflection_ArrayIndexPointsTo(?hctx:HContext, ?value:Value, ?baseHCtx:HContext, ?basevalue:Value)
OUTPUT_STATS(Stats_Simple_Reflection_ArrayIndexPointsTo)

.decl Stats_Simple_Reflection_InsensVarPointsTo(?value:Value, ?var:Var)
OUTPUT_STATS(Stats_Simple_Reflection_InsensVarPointsTo)

.decl Stats_Simple_Reflection_VarPointsTo(?hctx:HContext, ?value:Value, ?ctx:Context, ?var:Var)
OUTPUT_STATS(Stats_Simple_Reflection_VarPointsTo)

.decl Stats_Simple_Reflection_InsensInstanceFieldPointsTo(?value:Value, ?sig:Field, ?basevalue:Value)
OUTPUT_STATS(Stats_Simple_Reflection_InsensInstanceFieldPointsTo)

.decl Stats_Simple_Reflection_InstanceFieldPointsTo(?hctx:HContext, ?value:Value, ?sig:Field, ?baseHCtx:HContext, ?basevalue:Value)
OUTPUT_STATS(Stats_Simple_Reflection_InstanceFieldPointsTo)

.decl Stats_Simple_forName(?invocation:MethodInvocation)
OUTPUT_STATS(Stats_Simple_forName)

.decl Stats_Simple_Class_newInstance(?invocation:MethodInvocation)
OUTPUT_STATS(Stats_Simple_Class_newInstance)

.decl Stats_Simple_Constructor_newInstance(?invocation:MethodInvocation)
OUTPUT_STATS(Stats_Simple_Constructor_newInstance)
#endif

/***************************************************
 * Information Flow
 ***************************************************/

#ifdef INFORMATION_FLOW
.decl Stats_Simple_InsensTaintedVarPointsTo(?value:Value, ?var:Var)
OUTPUT_STATS(Stats_Simple_InsensTaintedVarPointsTo)

.decl Stats_Simple_Application_InsensTaintedVarPointsTo(?value:Value, ?var:Var)
OUTPUT_STATS(Stats_Simple_Application_InsensTaintedVarPointsTo)

.decl Stats_Simple_Application_TaintedVarPointsTo(?value:Value, ?ctx:Context, ?var:Var)
OUTPUT_STATS(Stats_Simple_Application_TaintedVarPointsTo)

.decl Stats_Simple_LeakingTaintedInformation(?invocation:MethodInvocation, ?objStr:symbol)
OUTPUT_STATS(Stats_Simple_LeakingTaintedInformation)

.decl Stats_Simple_OriginalTaintedValue(?id:symbol)
OUTPUT_STATS(Stats_Simple_OriginalTaintedValue)
#endif

/***************************************************
 * Open Programs
 ***************************************************/

#ifdef OPEN_PROGRAMS
//.decl Stats_Simple_ReachableFromEntryPoint(?method:Method)
//OUTPUT_STATS(Stats_Simple_ReachableFromEntryPoint)
#endif

/***************************************************
 * Memory Dump
 ***************************************************/

#ifdef HEAPDL
.decl NotLibraryHeapAllocation(?heap:HeapAllocation)
.output NotLibraryHeapAllocation

.decl Stats_Simple_InsensDynamicInstanceFieldPointsTo(?fld:Field, ?heap:HeapAllocation, ?baseHeap:HeapAllocation)
OUTPUT_STATS(Stats_Simple_InsensDynamicInstanceFieldPointsTo)

.decl Stats_Simple_Application_InsensDynamicInstanceFieldPointsTo(?baseHeap:HeapAllocation, ?fld:Field, ?heap:HeapAllocation)
OUTPUT_STATS(Stats_Simple_Application_InsensDynamicInstanceFieldPointsTo)

.decl Stats_Simple_InsensDynamicStaticFieldPointsTo(?fld:Field, ?heap:HeapAllocation)
OUTPUT_STATS(Stats_Simple_InsensDynamicStaticFieldPointsTo)

.decl Stats_Simple_Application_InsensDynamicStaticFieldPointsTo(?fld:Field, ?heap:HeapAllocation)
OUTPUT_STATS(Stats_Simple_Application_InsensDynamicStaticFieldPointsTo)

.decl Stats_Simple_InsensDynamicArrayIndexPointsTo(?heap:HeapAllocation, ?baseHeap:HeapAllocation)
OUTPUT_STATS(Stats_Simple_InsensDynamicArrayIndexPointsTo)

.decl Stats_Simple_Application_DynamicReachableMethod(?method:Method)
OUTPUT_STATS(Stats_Simple_Application_DynamicReachableMethod)
.output DynamicReachableMethod

.decl Stats_Simple_InsensDynamicCallGraphEdge(?fromMeth:Method, ?invocation:MethodInvocation, ?toMeth:Method)
OUTPUT_STATS(Stats_Simple_InsensDynamicCallGraphEdge)
#endif
