// Context-sensitive pointer analysis with context of 1 call site and a
// context-sensitive heap abstraction of 1 call site

// In this analysis, both the real context and the real heap context are
// MethodInvocations. Keeping mapping functions is the way to handle analyses
// where HContext = Context (since the language considers them different
// types).
ContextFromRealContext[?invocation] = ?ctx ->
  Context(?ctx), MethodInvocation(?invocation).
lang:constructor(`ContextFromRealContext).
RealContextFromContext[?ctx] = ?invocation ->
  Context(?ctx), MethodInvocation(?invocation).
RealContextFromContext[?ctx] = ?invocation <-
  ContextFromRealContext[?invocation] = ?ctx.

HContextFromRealHContext[?invocation] = ?hctx ->
  HContext(?hctx), MethodInvocation(?invocation).
lang:constructor(`HContextFromRealHContext).


StartupInvocation[] = ?startupInvocation <-
  MethodInvocationValue(?startupInvocation, "<<jvm-startup-context>>").
