PossibleEntryPoint(?method),
ClassHasPossibleEntryPoint(?class) <-
   Method:Modifier("public", ?method),
   Method:DeclaringType[?method] = ?class,
   !ClassModifier("private", ?class).

EntryPoint(?method) -> Method(?method).

EntryPoint(?method) <-
   PossibleEntryPoint(?method),
   !Method:Modifier("static", ?method),
   FormalParam[_, ?method] = _, //?formal,
//   Var:Type[?formal] = ?type,
   Method:DeclaringType[?method] = ?class,
   Type:Id(?class:?typename),
   string:substring[?typename, 0, 4] = "java".


// Find highest level in the naming hierarchy that contains public
// methods.

// #include "../../main/package-heuristic.logic"
ClassIsAboveOtherInNamingHierarchy(?classAbove, ?classBelow) <-
   ClassHasPossibleEntryPoint(?classAbove),
   ClassHasPossibleEntryPoint(?classBelow),
   Type:Id(?classAbove:?nameAbove), Type:Id(?classBelow:?nameBelow),
   // One's prefix before "." is a proper prefix of the other's prefix before "."
   string:substring[?nameAbove,0,LastDot[?classAbove]+1] = ?prefixAbove,
   string:substring[?nameBelow,0,LastDot[?classBelow]] = ?prefixBelow,
   string:substring[?prefixBelow,0,string:length[?prefixAbove]] = ?prefixAbove.

ClassWithEntryPoint(?class) <-
   ClassHasPossibleEntryPoint(?class),
   !ClassIsAboveOtherInNamingHierarchy(_, ?class).

EntryPoint2(?method) <-
   PossibleEntryPoint(?method),
   Method:DeclaringType[?method] = ?class,
   ClassWithEntryPoint(?class).