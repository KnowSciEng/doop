.comp Basic {

#include "basic-declarations.dl"

#include "finalization.dl"
#include "method-resolution.dl"
#include "subclass.dl"
#include "superinterface.dl"
#include "type-hierarchy.dl"

MainMethodDeclaration(?method) :-
#ifndef DISCOVER_MAIN_METHODS
// Consider every main() a "main method". JDK main() methods are
// excluded (or they would pollute the analysis of most programs).
   MainClass(?type),
   Method_DeclaringType(?method, ?type),
#endif // DISCOVER_MAIN_METHODS
   ?method != "<java.util.prefs.Base64: void main(java.lang.String[])>",
   ?method != "<sun.java2d.loops.GraphicsPrimitiveMgr: void main(java.lang.String[])>",
   ?method != "<sun.security.provider.PolicyParser: void main(java.lang.String[])>",
   Method_SimpleName(?method, "main"),
   Method_Descriptor(?method, "void(java.lang.String[])"),
   Method_Modifier("public", ?method),
   Method_Modifier("static", ?method).

#ifdef ANDROID
// Android apps start by running ActivityThread.main().
// TODO: this rule should only fire when analyzing an APK, not an AAR.
MainMethodDeclaration(?method) :-
  ?method = "<android.app.ActivityThread: void main(java.lang.String[])>",
  isMethod(?method).
#endif // ANDROID

}

.init basic = Basic
