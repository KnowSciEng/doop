
P(x) -> string(x).
Q(x, y) -> string(x), int(y).

Q(x, y) <- P(x), y = 10.
Q("hello", 0).


component First {
	Z(x) -> string(x).
}
as S0

component Base {
	lang:derivationType[`P1] = "Derived".
	P1(x) <- P(x).
	P1(x) -> string(x).
}
as S1

component Foo : Base {
	Z(y) -> int(y).
	Z(y) <- Q(_, y).
	W(x) <- Z@past(x).
}
as S2, S3

Foo as S4

S0 { * } -> S2
S1 { * } -> .
S2 { * } -> S3
S3 { W, P1 } -> S4
S4 { * } -> .


Pred(x) <- W(x).

S2:Z@past(x) <- S1:P1(x).
