//-----------------------------------------------------------------------------
// [Dynamic analysis related]
//-----------------------------------------------------------------------------


// DynamicNormalHeapAllocation
lang:physical:storageModel[`_DynamicNormalHeapAllocation] = "DelimitedFile".
lang:physical:filePath[`_DynamicNormalHeapAllocation] = "facts/DynamicNormalHeapAllocation.facts".
lang:physical:delimiter[`_DynamicNormalHeapAllocation] = "\t".
lang:physical:hasColumnNames[`_DynamicNormalHeapAllocation] = false.
_DynamicNormalHeapAllocation(?param1, ?param2, ?param3, ?param4, ?param5) ->
  string(?param1),
  string(?param2),
  string(?param3),
  string(?param4),
  string(?param5).

_HeapAllocationInformation(?lineNumber, ?methodId, ?type, ?heap) <-
   Instruction:Line[?insn] = ?lineNumber,
   AssignHeapAllocation:Heap[?insn] = ?heap,
   HeapAllocation:Type[?heap] = ?type,
   Instruction:Method[?insn] = ?method,
   Method:Id[?method] = ?methodId.

+DynamicHeapAllocation(?representation, ?heap1) <-
   _MatchedHeapAllocation(?representation, ?heap1, ?order),
   !_InvalidOrder(?representation, ?order).

_InvalidOrder(?representation, ?order1) <-
   _MatchedHeapAllocation(?representation, _, ?order1),
   _MatchedHeapAllocation(?representation, _, ?order2),
   ?order2 > ?order1.

_MatchedHeapAllocation(?representation, ?heap, ?order) <-
   _HeapAllocationInformation(?lineNumber, ?inMethod, ?type, ?heap),
   _DynamicNormalHeapAllocation(?lineNumber, ?inMethod, ?order, ?type, ?representation).

_OptDynamicNormalHeapAllocation(?representation, ?type, ?lineNumber, ?inMethod) <-
   _DynamicNormalHeapAllocation(?lineNumber, ?inMethod, "0", ?type, ?representation).

+UnmatchedDynamicNormalHeapAllocation(?type, ?representation, ?lineNumber, ?inMethod) <-
   !DynamicHeapAllocation(?representation,  _), // is this working ?
   _OptDynamicNormalHeapAllocation(?representation, ?type, ?lineNumber, ?inMethod).

+UnmatchedStaticNormalHeapAllocation(?methodId, ?lineNumber, ?type) <-
   _HeapAllocationInformation(?lineNumber, ?methodId, ?type, _),
   !_DynamicNormalHeapAllocation(?lineNumber, ?methodId, _, ?type, _).


// do same for string

// DynamicStringHeapAllocation
lang:physical:storageModel[`_DynamicStringHeapAllocation] = "DelimitedFile".
lang:physical:filePath[`_DynamicStringHeapAllocation] = "facts/DynamicStringHeapAllocation.facts".
lang:physical:delimiter[`_DynamicStringHeapAllocation] = "\t".
lang:physical:hasColumnNames[`_DynamicStringHeapAllocation] = false.
_DynamicStringHeapAllocation(?param1) ->
  string(?param1).

+DynamicHeapAllocation(?representation, ?heap) <-
   _DynamicStringHeapAllocation(?representation),
   HeapAllocation:byId[?representation] = ?heap.


// DynamicReachableMethod
lang:physical:storageModel[`_DynamicReachableMethod] = "DelimitedFile".
lang:physical:filePath[`_DynamicReachableMethod] = "facts/DynamicReachableMethod.facts".
lang:physical:delimiter[`_DynamicReachableMethod] = "\t".
lang:physical:hasColumnNames[`_DynamicReachableMethod] = false.
_DynamicReachableMethod(?param1) ->
  string(?param1).

+DynamicReachableMethod(?method) <-
   _DynamicReachableMethod(?representation),
   Method:Id(?method:?representation).

+UnmatchedDynamicReachableMethod(?representation) <-
   _DynamicReachableMethod(?representation),
   !Method:Id(_:?representation).

// DynamicCallGraphEdge
lang:physical:storageModel[`_DynamicCallGraphEdge] = "DelimitedFile".
lang:physical:filePath[`_DynamicCallGraphEdge] = "facts/DynamicCallGraphEdge.facts".
lang:physical:delimiter[`_DynamicCallGraphEdge] = "\t".
lang:physical:hasColumnNames[`_DynamicCallGraphEdge] = false.
_DynamicCallGraphEdge(?param1, ?param2, ?param3) ->
   string(?param1),
   int[64](?param2),
   string(?param3).

_InvocationMethodAndLine(?fromMethodId, ?lineNumber, ?name, ?invocation) <-
   MethodInvocation:Line[?invocation] = ?lineNumber,
   MethodInvocation:SimpleName[?invocation] = ?name,   
   Instruction:Method[?invocation] = ?fromMethod,
   Method:Id(?fromMethod:?fromMethodId).

+DynamicCallGraphEdge(?invocation, ?toMethod) <-
   _DynamicCallGraphEdge(?fromMethodId, ?lineNumber, ?toMethodId),
   _InvocationMethodAndLine(?fromMethodId, ?lineNumber, ?name, ?invocation),
   Method:SimpleName[?toMethod] = ?name,
   Method:Id(?toMethod:?toMethodId).
