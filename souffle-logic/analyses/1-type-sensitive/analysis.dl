// Context-sensitive pointer analysis with context of 1 type.

// In this analysis, the real context is a Type.
.type Context = [ type:Type ]

// This analysis has no context for heap objects.
// This is emulated by creating a single HContext object,
// which is used everywhere.
.type HContext

#ifdef HEAPDL
DynamicContextToContext([ ?type ], ?dynCtx) :-
   Value_byDynamicHeap(?heap1, ?value),
   Value_Type(?value, ?type),
   DynamicContextHeap1(?heap1, ?dynCtx).

DynamicContextToContext(?ctx, ?dynCtx) :-
   isDynamicContext(?dynCtx),
   !DynamicContextHeap1(_, ?dynCtx),
   isImmutableContext(?ctx).
#endif           