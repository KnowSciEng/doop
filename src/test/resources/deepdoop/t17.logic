@Entity Shape.
@Entity Circle -> Shape.
@Entity Triangle -> Shape.
@Constructor
cons:Shape[x] = y -> string(x), Shape(y).

// string x Circle
new<<cons:Shape[x] = y as Circle>>,
PredC(x, y) <- x = "circle".

// string x Triangle
new<<cons:Shape[x] = y as Triangle>>,
PredT(x, y) <- x = "triangle".

// Shape
Pred(x) <- PredC(_, x).
Pred(x) <- PredT(_, x).


// Foo(x) -> Animal(x).
// Bar(x) <- Foo(x), x != "cat".
    //@Entity Person.
    //new<<cons:A[z] = x as Person>>,
    //Foo123(x) <- z = "a".
    //new<<cons:A[z] = x as ABC>>,
    //Foo123(x) <- z = "a".
    //Bar123(x) -> ABC(x).
    //cons:A[x] = y <- Ble(a, b).
// duplicate declarations
// duplicate rules
// (Animal)? x string x Animal
//FooBar(x, y, z) <- Ble(y, z), Baz(z), x != z.
