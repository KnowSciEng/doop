#include "main-declarations.dl"

.comp AbstractContextSensitivity<Configuration> {
  #ifdef ANDROID
  #include "android-declarations.dl"
  #endif
  #include "class-initialization-declarations.dl"
  #include "exceptions-declarations.dl"
  #include "implicit-reachable-declarations.dl"
  #include "threads-declarations.dl"
  #ifdef ANDROID
    #include "android.dl"
  #endif

  #include "context-sensitivity-declarations.dl"
  #include "../commonMacros.dl"
  #include "prologue.dl"
  #include "context-sensitivity.dl"
  #include "export.dl"

  #define InvocationHandlerInvoke(invokeMeth)   Method_SimpleName(invokeMeth, "invoke"), \
    Method_DeclaringType(invokeMeth, ?class), \
    basic.SubtypeOf(?class, ?tInvocationHandler), \
    isInterfaceType(?tInvocationHandler), \
    ?tInvocationHandler = "java.lang.reflect.InvocationHandler"

  #define NEW_PROXY_INSTANCE "<java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>"
  #define DYNAMIC_PROXY_EXPORT

  #if defined(REFLECTION_DYNAMIC_PROXIES)
    #include "reflection/dynamic-proxies.dl"
    #include "reflection/dynamic-proxies-delta.dl"
  #endif // REFLECTION_DYNAMIC_PROXIES

  #ifdef DYNAMIC_PROXY_EXPORT
    .decl ReachableProxyInvoke(?invokeMeth:Method)
    .output ReachableProxyInvoke

    ReachableProxyInvoke(?invokeMeth) :-
      Reachable(?invokeMeth),
      InvocationHandlerInvoke(?invokeMeth).

    .decl ReachableNewProxyInstance(?meth:Method)
    .output ReachableNewProxyInstance

    ReachableNewProxyInstance(?meth) :-
      Reachable(?meth),
      ?meth = NEW_PROXY_INSTANCE.

  #endif // DYNAMIC_PROXY_EXPORT

  #if defined(REFLECTION)
    #include "reflection/rules.dl"
  #endif

  #ifdef TAMIFLEX
     #include "../addons/tamiflex/declarations.dl"
     #include "../addons/tamiflex/rules.dl"
  #endif
  #if defined(DACAPO) || defined(DACAPO_BACH)
     #include "../addons/dacapo/rules.dl"
  #endif

  .init configuration = Configuration
}
