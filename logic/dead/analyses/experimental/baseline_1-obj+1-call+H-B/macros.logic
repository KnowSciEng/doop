#include "../../../facts/macros.logic"

// For this analysis, every heap context recorded on allocation
// corresponds to the calling context of the allocator method.
// Subtle point: this may need to be created because even though it
// exists as a Context it may not exist as an HContext.
#define RecordMacro(ctx, heap, hctx) \
  HContext(hctx), \
  HContextFromRealHContext[RealContext1FromContext[ctx]] = hctx


// For this analysis the context of a method call corresponds to the
// identity of the receiver object. Again, this may trigger creation of
// a new object.
#define MergeMacro(callerCtx, invocation, hctx, heap, calleeCtx) \
  Context(calleeCtx), \
  ContextFromRealContext[heap, invocation] = calleeCtx

//#define AdvancedMergeBasisMacro(callerCtx, invocation, hctx, heap) \
//  MergeBasis(hctx, callerCtx, heap, invocation)

//#define CachedMergeMacro(callerCtx, invocation, hctx, heap, calleeCtx) \
//  CachedMerge[heap, invocation] = calleeCtx

// For this analysis, static calls use the invocation site as a context.
#define MergeStaticMacro(callerCtx, invocation, calleeCtx) \
  Context(calleeCtx), \
  ContextFromRealContext[RealContext1FromContext[callerCtx], invocation] = calleeCtx
// NOTE: Use the following when using both the normal (caller's) context
// and the invocation site for static calls.
//  SpecialContextFromRealContext[RealContextFromContext[callerCtx], invocation] = calleeCtx
// NOTE: This is the old logic. For this analysis, static calls just keep the same context as the
// caller. *Not* creating a new one, but pretending to, nonetheless, so the engine doesn't barf.
//  ContextFromRealContext[RealContextFromContext[callerCtx]] = calleeCtx

// MergeThreadStart, MergeStartup, and MergeFinalizerRegisterContext
// have the same logic as plain Merge for this analysis.
#define MergeThreadStartMacro(hctx, heap, callerCtx, newCtx) \
  Context(newCtx), \
  ContextFromRealContext[heap, RealContext2FromContext[callerCtx]] = newCtx

#define MergeStartupMacro(hctx, heap, calleeCtx) \
  Context(calleeCtx), \
  ContextFromRealContext[heap, ImmutableInvValue[]] = calleeCtx

#define MergeFinalizerRegisterContextMacro(callerCtx, inmethod, heap, newCtx) \
  Context(newCtx), \
  ContextFromRealContext[heap, RealContext2FromContext[callerCtx]] = newCtx
