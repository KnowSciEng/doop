#include "statistics-output.dl"

/****************************************************************
 * Heaps and Values
 ***************************************************************/

// .decl Stats_ReflectiveHeap(?heap:HeapAllocation)
// OUTPUT_STATS(Stats_ReflectiveHeap)

.decl Stats_ApplicationHeap(?heap:HeapAllocation)
OUTPUT_STATS(Stats_ApplicationHeap)

//.decl Stats_ReachableValue(?value:mainAnalysis.Value)
//OUTPUT_STATS(Stats_ReachableValue)
//
//.decl Stats_ReachableValueWithContext(?hctx:mainAnalysis.configuration.HContext, ?value:mainAnalysis.Value)
//OUTPUT_STATS(Stats_ReachableValueWithContext)
//
//.decl Stats_InsensValuesOnMethodBoundaries(?value:mainAnalysis.Value, ?var:Var),
//OUTPUT_STATS(Stats_InsensValuesOnMethodBoundaries)
//
//.decl Stats_ValuesOnMethodBoundaries(?hctx:mainAnalysis.configuration.HContext, ?value:mainAnalysis.Value, ?ctx:mainAnalysis.configuration.Context, ?var:Var)
//OUTPUT_STATS(Stats_ValuesOnMethodBoundaries)
//
//.decl Stats_ThrowablesInMethod(?valuetype:Type, ?method:Method)
//OUTPUT_STATS(Stats_ThrowablesInMethod)
//
//.decl Stats_InsensThrowableValuesOnMethodBoundaries(?value:mainAnalysis.Value, ?var:Var)
//OUTPUT_STATS(Stats_InsensThrowableValuesOnMethodBoundaries)
//
//.decl Stats_ThrowableValuesOnMethodBoundaries(?hctx:mainAnalysis.configuration.HContext, ?value:mainAnalysis.Value, ?ctx:mainAnalysis.configuration.Context, ?var:Var)
//OUTPUT_STATS(Stats_ThrowableValuesOnMethodBoundaries)
//
//.decl Stats_InsensAppThrowableValuesOnMethodBoundaries(?value:mainAnalysis.Value, ?var:Var)
//OUTPUT_STATS(Stats_InsensAppThrowableValuesOnMethodBoundaries)
//
//.decl Stats_AppThrowableValuesOnMethodBoundaries(?hctx:mainAnalysis.configuration.HContext, ?value:mainAnalysis.Value, ?ctx:mainAnalysis.configuration.Context, ?var:Var)
//OUTPUT_STATS(Stats_AppThrowableValuesOnMethodBoundaries)
//
//.decl Stats_ThrowablesInAppMethod(?valuetype:Type, ?method:Method)
//OUTPUT_STATS(Stats_ThrowablesInAppMethod)
//
//.decl Stats_InsensAppMethThrowableValuesOnMethodBoundaries(?value:mainAnalysis.Value, ?var:Var)
//OUTPUT_STATS(Stats_InsensAppMethThrowableValuesOnMethodBoundaries)
//
//.decl Stats_AppMethThrowableValuesOnMethodBoundaries(?hctx:mainAnalysis.configuration.HContext, ?value:mainAnalysis.Value, ?ctx:mainAnalysis.configuration.Context, ?var:Var)
//OUTPUT_STATS(Stats_AppMethThrowableValuesOnMethodBoundaries)

/****************************************************************
 * Vars
 ***************************************************************/

// Count how many objects, a var points to (context-sensitive)
.decl Stats_VarCount(?ctx:mainAnalysis.configuration.Context, ?var:Var, ?n:number)
OUTPUT_STATS(Stats_VarCount)

.decl Stats_InsensValueVarPointsTo(?value:mainAnalysis.Value, ?ctx:mainAnalysis.configuration.Context, ?var:Var)
OUTPUT_STATS(Stats_InsensValueVarPointsTo)

// Count how many objects, a var points to (value context-insensitive)
.decl Stats_InsensValueVarCount(?ctx:mainAnalysis.configuration.Context, ?var:Var, ?n:number)
OUTPUT_STATS(Stats_InsensValueVarCount)

.decl Stats_InsensBaseVarPointsTo(?hctx:mainAnalysis.configuration.HContext, ?value:mainAnalysis.Value, ?var:Var)
OUTPUT_STATS(Stats_InsensBaseVarPointsTo)

// Count how many objects, a var points to (base context-insensitive)
.decl Stats_InsensBaseVarCount(?var:Var, ?n:number)
OUTPUT_STATS(Stats_InsensBaseVarCount)

// Count how many objects, a var points to (value+base context-insensitive)
.decl Stats_InsensVarCount(?var:Var, ?n:number)
OUTPUT_STATS(Stats_InsensVarCount)

// NOTE: The same applies for Stats_InsensValueVarCount
.decl Stats_Vars(?n:number)
OUTPUT_STATS(Stats_Vars)

// NOTE: The same applies for Stats_InsensBaseVarCount
.decl Stats_InsensVars(?n:number)
OUTPUT_STATS(Stats_InsensVars)

//.decl Stats_InsensVarPointsToNonThrowable(?value:mainAnalysis.Value, ?var:Var)
//OUTPUT_STATS(Stats_InsensVarPointsToNonThrowable)
//
//.decl Stats_VarPointsToNonThrowable(?hctx:mainAnalysis.configuration.HContext, ?value:mainAnalysis.Value, ?ctx:mainAnalysis.configuration.Context, ?var:Var)
//OUTPUT_STATS(Stats_VarPointsToNonThrowable)

/****************************************************************
 * Arrays
 ***************************************************************/

// Count how many objects, an array points to (context-sensitive)
.decl Stats_ArrayCount(?basehctx:mainAnalysis.configuration.HContext, ?basevalue:mainAnalysis.Value, ?n:number)
OUTPUT_STATS(Stats_ArrayCount)

.decl Stats_InsensValueArrayIndexPointsTo(?value:mainAnalysis.Value, ?basehctx:mainAnalysis.configuration.HContext, ?basevalue:mainAnalysis.Value)
OUTPUT_STATS(Stats_InsensValueArrayIndexPointsTo)

// Count how many objects, an array points to (value context-insensitive)
.decl Stats_InsensValueArrayCount(?basehctx:mainAnalysis.configuration.HContext, ?basevalue:mainAnalysis.Value, ?n:number)
OUTPUT_STATS(Stats_InsensValueArrayCount)

.decl Stats_InsensBaseValueArrayIndexPointsTo(?hctx:mainAnalysis.configuration.HContext, ?value:mainAnalysis.Value, ?basevalue:mainAnalysis.Value)
OUTPUT_STATS(Stats_InsensBaseValueArrayIndexPointsTo)

// Count how many objects, an array points to (basevalue context-insensitive)
.decl Stats_InsensBaseValueArrayCount(?basevalue:mainAnalysis.Value, ?n:number)
OUTPUT_STATS(Stats_InsensBaseValueArrayCount)

// Count how many objects, an array points to (value+basevalue context-insensitive)
.decl Stats_InsensArrayCount(?basevalue:mainAnalysis.Value, ?n:number)
OUTPUT_STATS(Stats_InsensArrayCount)

// NOTE: The same applies for Stats_InsensValueArrayCount
.decl Stats_Arrays(?n:number)
OUTPUT_STATS(Stats_Arrays)

// NOTE: The same applies for Stats_InsensBaseValueArrayCount
.decl Stats_InsensArrays(?n:number)
OUTPUT_STATS(Stats_InsensArrays)

/****************************************************************
 * Fields
 ***************************************************************/

// Count how many objects, a field points to (context-sensitive)
.decl Stats_FieldCount(?sig:Field, ?basehctx:mainAnalysis.configuration.HContext, ?basevalue:mainAnalysis.Value, ?n:number)
OUTPUT_STATS(Stats_FieldCount)

.decl Stats_InsensValueInstanceFieldPointsTo(?value:mainAnalysis.Value, ?sig:Field, ?basehctx:mainAnalysis.configuration.HContext, ?basevalue:mainAnalysis.Value)
OUTPUT_STATS(Stats_InsensValueInstanceFieldPointsTo)

// Count how many objects, a field points to (value context-insensitive)
.decl Stats_InsensValueFieldCount(?sig:Field, ?basehctx:mainAnalysis.configuration.HContext, ?basevalue:mainAnalysis.Value, ?n:number)
OUTPUT_STATS(Stats_InsensValueFieldCount)

.decl Stats_InsensBaseValueInstanceFieldPointsTo(?hctx:mainAnalysis.configuration.HContext, ?value:mainAnalysis.Value, ?sig:Field, ?basevalue:mainAnalysis.Value)
OUTPUT_STATS(Stats_InsensBaseValueInstanceFieldPointsTo)

// Count how many objects, a field points to (basevalue context-insensitive)
.decl Stats_InsensBaseValueFieldCount(?sig:Field, ?basevalue:mainAnalysis.Value, ?n:number)
OUTPUT_STATS(Stats_InsensBaseValueFieldCount)

// Count how many objects, a field points to (value+basevalue context-insensitive)
.decl Stats_InsensFieldCount(?sig:Field, ?basevalue:mainAnalysis.Value, ?n:number)
OUTPUT_STATS(Stats_InsensFieldCount)

// NOTE: The same applies for Stats_InsensValueFieldCount
.decl Stats_Fields(?n:number)
OUTPUT_STATS(Stats_Fields)

// NOTE: The same applies for Stats_InsensBaseFieldCount
.decl Stats_InsensFields(?n:number)
OUTPUT_STATS(Stats_InsensFields)

//.decl Stats_InsensInstanceFieldPointsToNonThrowable(?value:mainAnalysis.Value, ?sig:Field, ?basevalue:mainAnalysis.Value)
//OUTPUT_STATS(Stats_InsensInstanceFieldPointsToNonThrowable)
//
//.decl Stats_InstanceFieldPointsToNonThrowable(?hctx:mainAnalysis.configuration.HContext, ?value:mainAnalysis.Value, ?sig:Field, ?basehctx:mainAnalysis.configuration.HContext, ?basevalue:mainAnalysis.Value)
//OUTPUT_STATS(Stats_InstanceFieldPointsToNonThrowable)
//
//.decl Stats_InsensInstanceFieldPointsToNonThrowable2(?value:mainAnalysis.Value, ?sig:Field, ?basevalue:mainAnalysis.Value)
//OUTPUT_STATS(Stats_InsensInstanceFieldPointsToNonThrowable2)
//
//.decl Stats_InstanceFieldPointsToNonThrowable2(?hctx:mainAnalysis.configuration.HContext, ?value:mainAnalysis.Value, ?sig:Field, ?basehctx:mainAnalysis.configuration.HContext, ?basevalue:mainAnalysis.Value)
//OUTPUT_STATS(Stats_InstanceFieldPointsToNonThrowable2)
//
//.decl Stats_InsensInstanceFieldPointsToNonThrowable3(?value:mainAnalysis.Value, ?sig:Field, ?basevalue:mainAnalysis.Value)
//OUTPUT_STATS(Stats_InsensInstanceFieldPointsToNonThrowable3)
//
//.decl Stats_InstanceFieldPointsToNonThrowable3(?hctx:mainAnalysis.configuration.HContext, ?value:mainAnalysis.Value, ?sig:Field, ?basehctx:mainAnalysis.configuration.HContext, ?basevalue:mainAnalysis.Value)
//OUTPUT_STATS(Stats_InstanceFieldPointsToNonThrowable3)

/***************************************************
 * Methods
 ***************************************************/

// Count how many contexts, a reachable method appears with
.decl Stats_MethodContextCount(?method:Method, ?n:number)
OUTPUT_STATS(Stats_MethodContextCount)

.decl Stats_Methods(?n:number)
OUTPUT_STATS(Stats_Methods)

//// Count how many local vars, a reachable method has
//.decl Stats_InsensVarInReachableMethod(?var:Var, ?method:Method)
//OUTPUT_STATS(Stats_InsensVarInReachableMethod)
//
//.decl Stats_VarInReachableMethod(?var:Var, ?ctx:mainAnalysis.configuration.Context, ?method:Method)
//OUTPUT_STATS(Stats_VarInReachableMethod)
//
//.decl Stats_MethodVarCount(?ctx:mainAnalysis.configuration.Context, ?method:Method, ?n:number)
//OUTPUT_STATS(Stats_MethodVarCount)
//
//.decl Stats_InsensMethodVarCount(?method:Method, ?n:number)
//OUTPUT_STATS(Stats_InsensMethodVarCount)
//
//.decl Stats_MethodsWithVars(?n:number)
//OUTPUT_STATS(Stats_MethodsWithVars)
//
//.decl Stats_InsensMethodsWithVars(?n:number)
//OUTPUT_STATS(Stats_InsensMethodsWithVars)
//
//.decl Stats_ReachableNativeMethod(?method:Method)
//OUTPUT_STATS(Stats_ReachableNativeMethod)

/****************************************************************
 * Dominance
 ***************************************************************/

//.decl Stats_Dominance_VarPointsTo_Var(?var:Var, ?count:number)
//OUTPUT_STATS(Stats_Dominance_VarPointsTo_Var)
//
//.decl Stats_Dominance_VarPointsTo_AllocationSite(?alloc:Value, ?count:number)
//OUTPUT_STATS(Stats_Dominance_VarPointsTo_AllocationSite)
//
//.decl Stats_Dominance_VarPointsTo_Object(?hctx:mainAnalysis.configuration.HContext, ?value:mainAnalysis.Value, ?count:number)
//OUTPUT_STATS(Stats_Dominance_VarPointsTo_Object)
//
//// Intermediate predicate
//.decl Dominance_VarPointsTo_Method_Var(?method:Method, ?var:Var, ?count:number)
//
//.decl Stats_Dominance_VarPointsTo_Method(?method:Method ?count:number)
//OUTPUT_STATS(Stats_Dominance_VarPointsTo_Method)
//
//.decl Stats_Dominance_InstanceFieldPointsTo_Signature(?sig:Field, ?count:number)
//OUTPUT_STATS(Stats_Dominance_InstanceFieldPointsTo_Signature)
//
//.decl Stats_Dominance_InstanceFieldPointsTo_BaseAllocationSite(?alloc:Value, ?count:number)
//OUTPUT_STATS(Stats_Dominance_InstanceFieldPointsTo_BaseAllocationSite)
//
//.decl Stats_Dominance_InstanceFieldPointsTo_BaseObject(?hctx:mainAnalysis.configuration.HContext, ?value:mainAnalysis.Value, ?count:number)
//OUTPUT_STATS(Stats_Dominance_InstanceFieldPointsTo_BaseObject)
//
//.decl Stats_Dominance_InstanceFieldPointsTo_IdAllocationSite(?alloc:Value, ?count:number)
//OUTPUT_STATS(Stats_Dominance_InstanceFieldPointsTo_IdAllocationSite)
//
//.decl Stats_Dominance_InstanceFieldPointsTo_IdObject(?hctx:mainAnalysis.configuration.HContext, ?value:mainAnalysis.Value, ?count:number)
//OUTPUT_STATS(Stats_Dominance_InstanceFieldPointsTo_IdObject)

/***************************************************
 * Call graph edges
 ***************************************************/

//.decl Stats_InsensCallGraphEdgesFromSize(?from:MethodInvocation, ?size:number)
//OUTPUT_STATS(Stats_InsensCallGraphEdgesFromSize)
//
//.decl Stats_InsensCallGraphEdgesToSize(?to:Method, ?size:number)
//OUTPUT_STATS(Stats_InsensCallGraphEdgesToSize)

/***************************************************
 * Exceptions
 ***************************************************/

.decl Stats_InsensValueThrowPointsTo(?value:mainAnalysis.Value, ?ctx:mainAnalysis.configuration.Context, ?method:Method)
OUTPUT_STATS(Stats_InsensValueThrowPointsTo)

//.decl Stats_InsensValueThrowPointsToSize(?ctx:mainAnalysis.configuration.Context, ?method:Method, ?size:number)
//OUTPUT_STATS(Stats_InsensValueThrowPointsToSize)

.decl Stats_InsensThrowPointsTo(?value:mainAnalysis.Value, ?method:Method)
OUTPUT_STATS(Stats_InsensThrowPointsTo)

//.decl Stats_InsensThrowPointsToSize(?method:Method, ?size:number)
//OUTPUT_STATS(Stats_InsensThrowPointsToSize)

//.decl Stats_ReachableExceptionHandler(?handler:ExceptionHandler)
//OUTPUT_STATS(Stats_ReachableExceptionHandler)
//
//.decl Stats_ReachableThrow(?ref:Throw_Insn)
//OUTPUT_STATS(Stats_ReachableThrow)

//// Count how many objects, a method may throw (context-sensitive)
//.decl Stats_ThrowsPerMethodCount(?ctx:mainAnalysis.configuration.Context, ?method:Method, ?n:number)
//OUTPUT_STATS(Stats_ThrowsPerMethodCount)
//
//// Count how many objects, a method may throw (value context-insensitive)
//.decl Stats_InsensValueThrowsPerMethodCount(?ctx:mainAnalysis.configuration.Context, ?method:Method, ?n:number)
//OUTPUT_STATS(Stats_InsensValueThrowsPerMethodCount)
//
//.decl Stats_InsensMethodThrowPointsTo(?hctx:mainAnalysis.configuration.HContext, ?value:mainAnalysis.Value, ?method:Method)
//OUTPUT_STATS(Stats_InsensMethodThrowPointsTo)
//
//// Count how many objects, a method may throw (method context-insensitive)
//.decl Stats_InsensMethodThrowsPerMethodCount(?method:Method, ?n:number)
//OUTPUT_STATS(Stats_InsensMethodThrowsPerMethodCount)
//
//// Count how many objects, a method may throw (value+method context-insensitive)
//.decl Stats_InsensThrowsPerMethodCount(?method:Method, ?n:number)
//OUTPUT_STATS(Stats_InsensThrowsPerMethodCount)
//
//// NOTE: The same applies for Stats_InsensValueThrowsPerMethodCount
//.decl Stats_ThrowMethods(?n:number)
//OUTPUT_STATS(Stats_ThrowMethods)
//
//// NOTE: The same applies for Stats_InsensMethodThrowsPerMethodCount
//.decl Stats_InsensThrowMethods(?n:number)
//OUTPUT_STATS(Stats_InsensThrowMethods)
