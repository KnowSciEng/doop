.decl ReachableClass(?class:symbol)
.decl ReachableApplicationClass(?class:symbol)
.decl ReachableSDKClass(?class:symbol)
.decl ReachableDependencyClass(?class:symbol)
.decl DependencyMethodDirectlyReachableFromApplication(?method:symbol)
.decl DependencyMethodDirectlyReachableFromDependency(?method:symbol)
.decl DependencyMethodDirectlyReachableFromSDK(?method:symbol)
.decl SDKMethodDirectlyReachableFromApplication(?method:symbol)
.decl SDKMethodDirectlyReachableFromDependency(?method:symbol)
.decl SDKMethodDirectlyReachableFromSDK(?method:symbol)
.decl Metrics_AppEntryPoint(?method:Method)
.decl Metrics_InvocationZeroTargets(?invo:MethodInvocation)
.decl Metrics_InvocationTargets_Count(?invo:MethodInvocation, ?n:number)
.decl Metrics_Method_IncomingInvo_Count(?method:Method, ?n:number)
.decl Metrics_Method_IncomingMethods_Count(?method:Method, ?n:number)
.decl Metrics_Method_OutgoingInvo_Count(?method:Method, ?n:number)
.decl Metrics_Method_OutgoingMethods_Count(?method:Method, ?n:number)
.decl Metrics_Value_AsReceiver_Count(?value:mainAnalysis.Value, ?n:number)

.output ReachableClass
.output ReachableApplicationClass
.output ReachableSDKClass
.output ReachableDependencyClass
.output DependencyMethodDirectlyReachableFromApplication
.output DependencyMethodDirectlyReachableFromDependency
.output DependencyMethodDirectlyReachableFromSDK
.output SDKMethodDirectlyReachableFromApplication
.output SDKMethodDirectlyReachableFromDependency
.output SDKMethodDirectlyReachableFromSDK
.output Metrics_AppEntryPoint
.output Metrics_InvocationZeroTargets
.output Metrics_InvocationTargets_Count
.output Metrics_Method_IncomingInvo_Count
.output Metrics_Method_IncomingMethods_Count
.output Metrics_Method_OutgoingInvo_Count
.output Metrics_Method_OutgoingMethods_Count
.output Metrics_Value_AsReceiver_Count

ReachableClass(?class) :-
    mainAnalysis.Reachable(?method),
    Method_DeclaringType(?method, ?class).

ReachableApplicationClass(?class) :-
    mainAnalysis.Reachable(?method),
    Method_DeclaringType(?method, ?class),
    ApplicationClass(?class).

ReachableSDKClass(?class) :-
    mainAnalysis.Reachable(?method),
    Method_DeclaringType(?method, ?class),
    ((match("android.*", ?class),
      !match("android.support.*", ?class));
     match("java.*", ?class)),
    !ApplicationClass(?class).

ReachableDependencyClass(?class) :-
    mainAnalysis.Reachable(?method),
    Method_DeclaringType(?method, ?class),
    !ApplicationClass(?class),
    !ReachableSDKClass(?class).

DependencyMethodDirectlyReachableFromApplication(?depMethod) :-
    mainAnalysis.Reachable(?appMethod),
    Method_DeclaringType(?appMethod, ?appClass),
    ApplicationClass(?appClass),
    MethodInvocation_Method(?invo, ?appMethod),
    mainAnalysis.CallGraphEdge(_, ?invo, _, ?depMethod),
    Method_DeclaringType(?depMethod, ?depClass),
    ReachableDependencyClass(?depClass).

DependencyMethodDirectlyReachableFromDependency(?depMethod) :-
    mainAnalysis.Reachable(?callerDepMethod),
    Method_DeclaringType(?callerDepMethod, ?callerDepClass),
    ReachableDependencyClass(?callerDepClass),
    MethodInvocation_Method(?invo, ?callerDepMethod),
    mainAnalysis.CallGraphEdge(_, ?invo, _, ?depMethod),
    Method_DeclaringType(?depMethod, ?depClass),
    ReachableDependencyClass(?depClass).

DependencyMethodDirectlyReachableFromSDK(?depMethod) :-
    mainAnalysis.Reachable(?sdkMethod),
    Method_DeclaringType(?sdkMethod, ?sdkClass),
    ReachableSDKClass(?sdkClass),
    MethodInvocation_Method(?invo, ?sdkMethod),
    mainAnalysis.CallGraphEdge(_, ?invo, _, ?depMethod),
    Method_DeclaringType(?depMethod, ?depClass),
    ReachableDependencyClass(?depClass).

SDKMethodDirectlyReachableFromApplication(?sdkMethod) :-
    mainAnalysis.Reachable(?appMethod),
    Method_DeclaringType(?appMethod, ?appClass),
    ApplicationClass(?appClass),
    MethodInvocation_Method(?invo, ?appMethod),
    mainAnalysis.CallGraphEdge(_, ?invo, _, ?sdkMethod),
    Method_DeclaringType(?sdkMethod, ?sdkClass),
    ReachableSDKClass(?sdkClass).

SDKMethodDirectlyReachableFromDependency(?sdkMethod) :-
    mainAnalysis.Reachable(?depMethod),
    Method_DeclaringType(?depMethod, ?depClass),
    ReachableDependencyClass(?depClass),
    MethodInvocation_Method(?invo, ?depMethod),
    mainAnalysis.CallGraphEdge(_, ?invo, _, ?sdkMethod),
    !SDKMethodDirectlyReachableFromApplication(?sdkMethod),
    Method_DeclaringType(?sdkMethod, ?sdkClass),
    ReachableSDKClass(?sdkClass).

SDKMethodDirectlyReachableFromSDK(?sdkMethod) :-
    mainAnalysis.Reachable(?callerSDKMethod),
    Method_DeclaringType(?callerSDKMethod, ?callerSDKClass),
    ReachableSDKClass(?callerSDKClass),
    MethodInvocation_Method(?invo, ?callerSDKMethod),
    mainAnalysis.CallGraphEdge(_, ?invo, _, ?sdkMethod),
    !SDKMethodDirectlyReachableFromApplication(?sdkMethod),
    !SDKMethodDirectlyReachableFromDependency(?sdkMethod),
    Method_DeclaringType(?sdkMethod, ?sdkClass),
    ReachableSDKClass(?sdkClass).


Metrics_AppEntryPoint(?m) :- mainAnalysis.ApplicationEntryPoint(?m).

.decl _Metrics_InvoTargets(?invo:MethodInvocation, ?toMethod:Method)

_Metrics_InvoTargets(?invo, ?toMethod) :-
  mainAnalysis.CallGraphEdge(_, ?invo, _, ?toMethod).

Metrics_InvocationTargets_Count(?invo, ?n) :-
  _Metrics_InvoTargets(?invo, _),
  ?n = count:{_Metrics_InvoTargets(?invo, _)}.
  
Metrics_InvocationZeroTargets(?invo) :-
  isMethodInvocation(?invo),
  Instruction_Method(?invo, ?fromMethod),
  mainAnalysis.Reachable(?fromMethod),
  !mainAnalysis.CallGraphEdge(_, ?invo, _, _).

.decl _MethodIncomingInvo(?toMethod:Method, ?invo:MethodInvocation)
_MethodIncomingInvo(?toMethod, ?invo) :-
  mainAnalysis.CallGraphEdge(_, ?invo, _, ?toMethod).

.decl _MethodIncomingMethod(?toMethod:Method, ?inMethod:Method)
_MethodIncomingMethod(?toMethod, ?inMethod) :-
  mainAnalysis.CallGraphEdge(_, ?invo, _, ?toMethod),
  Instruction_Method(?invo, ?inMethod).

Metrics_Method_IncomingInvo_Count(?toMethod, ?n) :-
  _MethodIncomingInvo(?toMethod, _),
  ?n = count:{_MethodIncomingInvo(?toMethod, _)}.

Metrics_Method_IncomingMethods_Count(?toMethod, ?n) :-
  _MethodIncomingMethod(?toMethod, _),
  ?n = count:{_MethodIncomingMethod(?toMethod, _)}.

.decl _MethodOutgoingInvo(?inMethod:Method, ?invo:MethodInvocation)
_MethodOutgoingInvo(?inMethod, ?invo) :-
  Instruction_Method(?invo, ?inMethod),
  mainAnalysis.CallGraphEdge(_, ?invo, _, _).

.decl _MethodOutgoingMethod(?inMethod:Method, ?toMethod:Method)
_MethodOutgoingMethod(?inMethod, ?toMethod) :-
  Instruction_Method(?invo, ?inMethod),
  mainAnalysis.CallGraphEdge(_, ?invo, _, ?toMethod).

Metrics_Method_OutgoingInvo_Count(?inMethod, ?n) :-
  _MethodOutgoingInvo(?inMethod, _),
  ?n = count:{_MethodOutgoingInvo(?inMethod, _)}.

Metrics_Method_OutgoingMethods_Count(?inMethod, ?n) :-
  _MethodOutgoingMethod(?inMethod, _),
  ?n = count:{_MethodOutgoingMethod(?inMethod, _)}.

.decl _ValueAsReceiver(?value:mainAnalysis.Value, ?invo:VirtualMethodInvocation_Insn)
_ValueAsReceiver(?value, ?invo) :-
  VirtualMethodInvocation_Base(?invo, ?base),
  mainAnalysis.VarPointsTo(_, ?value, _, ?base),
  !mainAnalysis.Value_Null(?value),
  !mainAnalysis.HeapAllocation_Merge(?value, _),
  !mainAnalysis.HeapAllocation_Merge(_, ?value),
  !mainAnalysis.HeapIsMergedString(?value),
  !mainAnalysis.HeapIsMergedStringFactory(?value).

Metrics_Value_AsReceiver_Count(?value, ?n) :-
  _ValueAsReceiver(?value, _),
  ?n = count:{_ValueAsReceiver(?value, _)}.


.decl PointsToCountPerType(?type:Type, Y:number)
PointsToCountPerType(?type, Y) :-
   isType(?type),
   Y = count : {mainAnalysis.VarPointsTo(?hctx, ?value, ?ctx, ?var), mainAnalysis.Value_Type(?value, ?type),
   ?hctx = ?hctx,
   ?ctx = ?ctx,
   ?var = ?var}.

.output PointsToCountPerType
        
.decl InstanceFieldPointsToCountPerType(?type:Type, Y:number)
InstanceFieldPointsToCountPerType(?type, Y) :-
  isType(?type),
  Y = count : {mainAnalysis.InstanceFieldPointsTo(_, _, _, _, ?basevalue), mainAnalysis.Value_Type(?basevalue, ?type)}.

.output InstanceFieldPointsToCountPerType

.decl IFPTToVPTRatioPerType(?type:Type, ?n:number)
IFPTToVPTRatioPerType(?type, ?n) :-
  PointsToCountPerType(?type, ?n1),
  InstanceFieldPointsToCountPerType(?type, ?n2),
  ?n = ?n1/?n2,
  ?n2 > 0.

.output IFPTToVPTRatioPerType

.decl ContextsPerMethod(?method:Method, ?n:number)

ContextsPerMethod(?method, Y) :- isMethod(?method), Y = count: mainAnalysis.ReachableContext(_, ?method).        

.output ContextsPerMethod
