// Context-sensitive pointer analysis with context of 1 call site.

// In this analysis, the real context is a MethodInvocation. Keeping mapping
// functions is the way to handle analyses where HContext = Context
// (since the language considers them different types).
ContextFromRealContext[?invocation] = ?ctx ->
  Context(?ctx), MethodInvocation(?invocation).
lang:constructor(`ContextFromRealContext).
RealContextFromContext[?ctx] = ?invocation ->
  Context(?ctx), MethodInvocation(?invocation).
RealContextFromContext[?ctx] = ?invocation <-
  ContextFromRealContext[?invocation] = ?ctx.

// This analysis has no context for heap objects.
// This is emulated by creating a single HContext object,
// which is used everywhere.
HContextFromRealHContext[] = ?hctx ->
  HContext(?hctx).
lang:constructor(`HContextFromRealHContext).


StartupInvocation[] = ?startupInvocation <-
  MethodInvocationValue(?startupInvocation, "<<jvm-startup-context>>").
