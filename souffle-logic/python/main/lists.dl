.decl IsPyList(?heap:HeapAllocation)
.decl isListOfConsts(?heap:HeapAllocation)
.decl ListHasNonConstantVal(?heap:HeapAllocation)

.decl VarPointsToList(?var:Var, ?listHeap:HeapAllocation)
.decl ConstListDimensions(?listHeap:HeapAllocation, ?numDimensions:number)
.decl ConstListContents(?listHeap:HeapAllocation, ?index:number, ?val:Value)

.output ConstListContents
ConstListContents(?heap, ?index, ?val):-
  isListOfConsts(?heap),
  VarPointsToList(?var, ?heap),
  StoreInstanceField_Base(?instr, ?var),
  isIntConstant(?fieldName),
  FieldInstruction_FieldName(?instr, ?fieldName),
  ?index = to_number(?fieldName),
  StoreInstanceField_From(?instr, ?from),
  VarHasConstValue(?from, ?val).

.output ConstListDimensions
ConstListDimensions(?heap,?size):-
  isListOfConsts(?heap),
  VarPointsToList(?var, ?heap),
  ?size = 1 + max ?index: {
    StoreInstanceField_Base(?instr, ?var),
    isIntConstant(?fieldName),
    FieldInstruction_FieldName(?instr, ?fieldName),
    ?index = to_number(?fieldName)
  }.

.output isListOfConsts
isListOfConsts(?heap):-
  IsPyList(?heap),
  !(ListHasNonConstantVal(?heap)).

.output IsPyList
IsPyList(?heap),
VarPointsToList(?var, ?heap) :-
  AssignInstruction_To(?instr, ?var),
  AssignHeapAllocation_Heap(?instr, ?heap),
  HeapAllocation_Type(?heap, ?type),
  ?type = "list".

.output ListHasNonConstantVal
ListHasNonConstantVal(?heap):-
  VarPointsToList(?var, ?heap),
  StoreInstanceField_Base(?instr, ?var),
  StoreInstanceField_From(?instr, ?from),
  !(VarHasConstValue(?from,_)).
