Value_DeclaringType(?value, "java.lang.System") :-
   ?value = "<<string-constant>>",
   isValue(?value) ;
   ?value = "<<reflection-string-constant>>",
   isValue(?value) ;
   ?value = "<<string-buffer>>",
   isValue(?value) ;
   ?value = "<<string-builder>>",
   isValue(?value) ;
   ?value = "<<initial-context>>",
   isValue(?value) ;
   ?value = "<<jvm-startup-context>>",
   isValue(?value) ;
   ?value = "<<jvm-startup-hcontext>>",
   isValue(?value) ;
   ?value = "<<clinit-context>>",
   isValue(?value) ;
   ?value = "<<system-thread-group>>",
   isValue(?value) ;
   ?value = "<<main-thread-group>>",
   isValue(?value) ;
   ?value = "<<main-thread>>",
   isValue(?value) ;
   ?value = "<<immutable-context>>",
   isValue(?value) ;
   ?value = "<<immutable-hcontext>>",
   isValue(?value) ;
   ?value = "<<immutable>>",
   isValue(?value).

// JLS 5.1.7 (Java 8).
// TODO Misses null-to-null boxing (is it useful for dynamic proxies?).
.decl PrimitiveType_Boxed(?type:Type, ?boxedType:Type)

PrimitiveType_Boxed("boolean", "java.lang.Boolean"  ).
PrimitiveType_Boxed("byte"   , "java.lang.Byte"     ).
PrimitiveType_Boxed("short"  , "java.lang.Short"    ).
PrimitiveType_Boxed("char"   , "java.lang.Character").
PrimitiveType_Boxed("int"    , "java.lang.Integer"  ).
PrimitiveType_Boxed("long"   , "java.lang.Long"     ).
PrimitiveType_Boxed("float"  , "java.lang.Float"    ).
PrimitiveType_Boxed("double" , "java.lang.Double"   ).
